// File generated by Manus based on firebase_options.json
// To ensure compatibility with Flutter web, use this file for initialization.

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    // Add options for other platforms (Android, iOS, macOS) if needed.
    // For now, we only provide web options as per the issue.
    // You might need to run `flutterfire configure` to generate options for other platforms.
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        // throw UnsupportedError(
        //   'DefaultFirebaseOptions have not been configured for android - ' 
        //   'you can reconfigure this by running the FlutterFire CLI again.',
        // );
        // Using web options as a placeholder for Android to allow compilation
        // Ideally, generate proper Android options using flutterfire configure
        print("Warning: Using web Firebase options for Android. Configure proper options.");
        return web; 
      case TargetPlatform.iOS:
        // throw UnsupportedError(
        //   'DefaultFirebaseOptions have not been configured for ios - ' 
        //   'you can reconfigure this by running the FlutterFire CLI again.',
        // );
        // Using web options as a placeholder for iOS to allow compilation
        // Ideally, generate proper iOS options using flutterfire configure
        print("Warning: Using web Firebase options for iOS. Configure proper options.");
        return web;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - ' 
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - ' 
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - ' 
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyA1234567890abcdefghijklmnopqrstuvwxyz',
    appId: '1:123456789012:web:abcdef1234567890abcdef',
    messagingSenderId: '123456789012',
    projectId: 'cheaperdata-app',
    authDomain: 'cheaperdata-app.firebaseapp.com',
    storageBucket: 'cheaperdata-app.appspot.com',
    measurementId: 'G-ABCDEF1234',
  );

  // Add FirebaseOptions for other platforms (android, ios, macos) here 
  // if you configure them using `flutterfire configure`.
  // static const FirebaseOptions android = FirebaseOptions(...);
  // static const FirebaseOptions ios = FirebaseOptions(...);
  // static const FirebaseOptions macos = FirebaseOptions(...);
}

